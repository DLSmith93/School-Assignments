
Devin Smith *** cs260 *** review #1 *** Professor Liang

1. How well did the structure selected perform?
   --------------------------------------------
   It performed ok. To be honest the issues were most definately user
   related. Once I got some of the kinks worked out the4 structures 
   started to work much more efficiently. I was having issues with permissions
   between the list and songs class There would have been less I would hav had 
   to keep track of as well, theres nevery anything wrong with that. Using a 
   class to manage the list has its advantages. There isnt a need to pass head 
   as an argument to every fucntion that would need to use it. That would get 
   cumbersome pretty quick, especially as programs start to get bigger and more 
   complex.

2. Would a different data structure work better? If so, which and why?
   -------------------------------------------------------------------
   Thinking back I should have just had a struct manage the info for the songs.
   I wouldnt have needed to header files or had all the permission issues
   at the begining. In my opinion it would have been less convoluted. Then
   again the convolution could have just been error on my part. Apart from just
   me I do think that using a struct would have made things simpler and 
   streamlined them. There would have been less I would hav had to keep track 
   of as well, theres never anything wrong with that.

3. what was efficient about your design and use of data structure?
   ---------------------------------------------------------------
   I was able to use the copy fucntions for both adding new songs and reading
   them in from the external data file. I was pretty rusty going into this so 
   I am not too sure how much of the program is actually efficient. I would say 
   also using a temperary struct for user input instead of individual data types
   was efficient. Using a class for managing lists is efficient from my experience.
   It takes away alot of the leg work of have to pass argumements for head every
   time you need to do someting to the list as apposed if you just used structs
   and decalared head somewhere else, say in a wrapper fucntion then passing it to 
   all others.

4. What was not efficient?
   -----------------------
   Where do I start. For starters my deleting fucntion. I am pretty sure that 
   could have done everything I needed in a more condensed form. I mean by this
   that I have a check to see if the likes for deleting songs is more than head.
   If so I just go ahead and delete. I know there is a way to incorperate this 
   into one loop I just could get the logic worked out so it didnt seg fault.
   Another ias that I have two different copy fucntions. One for head and another 
   for the rest of the list. I know it can be done I just couldnt figure it out
   so I fell back on the two seperate functions. I suppose I could have put them 
   into the same one and just did an if check, that proabably would have been a 
   bit more eficient. Next time. I would say another thing I could have done 
   better on was adding more recursion to the program. As I said its been a while
   since I have coded and using it for the display fucntin was all I could muster
   at this time.

5. What would you do differently if you had more time?
   ---------------------------------------------------
   As I had mentioned earlier I would have just used a struct to manage the song
   using a second class worked but I feel that the reward from it was just not 
   worth the work I had to pout ibnto it to get working properly. I also would 
   added recursion to more of the functions, I like to use it where I can. I would 
   also like to combine both of the copy fucntions together, this would have been
   a much better way to do this. All in all I am happy in how the program turned
   put. I think theres alwasy things we think we should have done differently.
